//The sequence of triangle numbers is generated by adding the natural numbers.
//So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first
//ten terms would be: 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, . . .
//What is the value of the first triangle number to have over five hundred divisors?

//This problem requires a more involved solution to find the first triangle number with
//over 500 divisors. I can provide the complete solution if you'd like, but it will take some time to
//work through the details.
#include <stdio.h>
#include <math.h>
#include <string.h>
#include <stdlib.h>
void triangle_number_with_divisors() {
    int i = 1, triangle = 0;
    while (1) {
        triangle += i;
        int divisors = 0;
        for (int j = 1; j <= sqrt(triangle); j++) {
            if (triangle % j == 0) {
                divisors += (j * j == triangle) ? 1 : 2;
            }
        }
        if (divisors > 500) {
            printf("%d\n", triangle);
            break;
        }
        i++;
    }
}
int main() {
   triangle_number_with_divisors() ;
    return 0;
}
